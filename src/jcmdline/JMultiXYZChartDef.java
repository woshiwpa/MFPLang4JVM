/*
 * MFP project, JMultiXYZChartDef.java : Designed and developed by Tony Cui in 2021
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

 /*
 * JMultiXYZChartDef.java
 *
 * Created on 24/04/2012, 10:32:09 AM
 */
package jcmdline;

import com.cyzapps.Jfcalc.PlotLib;
import java.awt.Color;
import javax.swing.BoxLayout;

/**
 *
 * @author tonyc
 */
public class JMultiXYZChartDef extends javax.swing.JDialog {

    /**
     * Creates new form JMultiXYZChartDef
     */
    public JMultiXYZChartDef(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        panelCurves.setLayout(new BoxLayout(panelCurves, BoxLayout.PAGE_AXIS));
        getRootPane().setDefaultButton(btnCopy2CmdLine);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblChartName = new javax.swing.JLabel();
        txtFieldChartName = new javax.swing.JTextField();
        lblChartTitle = new javax.swing.JLabel();
        txtFieldChartTitle = new javax.swing.JTextField();
        lblXTitle = new javax.swing.JLabel();
        txtFieldXTitle = new javax.swing.JTextField();
        lblYTitle = new javax.swing.JLabel();
        txtFieldYTitle = new javax.swing.JTextField();
        btnAddCurve = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnCopy2CmdLine = new javax.swing.JButton();
        scrollPanelCurves = new javax.swing.JScrollPane();
        panelCurves = new javax.swing.JPanel();
        txtFieldZTitle = new javax.swing.JTextField();
        lblZTitle = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(JCmdLineApp.getStringsClass().get_XYZ_chart_def_title());
        setName("Form"); // NOI18N
        setResizable(false);

        lblChartName.setText(JCmdLineApp.getStringsClass().get_graph_name_prompt());
        lblChartName.setName("lblChartName"); // NOI18N

        txtFieldChartName.setName("txtFieldChartName"); // NOI18N
        txtFieldChartName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFieldChartNameFocusLost(evt);
            }
        });

        lblChartTitle.setText(JCmdLineApp.getStringsClass().get_graph_title_prompt());
        lblChartTitle.setName("lblChartTitle"); // NOI18N

        txtFieldChartTitle.setName("txtFieldChartTitle"); // NOI18N

        lblXTitle.setText(JCmdLineApp.getStringsClass().get_graph_Xtitle_prompt());
        lblXTitle.setName("lblXTitle"); // NOI18N

        txtFieldXTitle.setName("txtFieldXTitle"); // NOI18N

        lblYTitle.setText(JCmdLineApp.getStringsClass().get_graph_Ytitle_prompt());
        lblYTitle.setName("lblYTitle"); // NOI18N

        txtFieldYTitle.setName("txtFieldYTitle"); // NOI18N

        btnAddCurve.setText(JCmdLineApp.getStringsClass().get_add_curve_btn_text());
        btnAddCurve.setName("btnAddCurve"); // NOI18N
        btnAddCurve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCurveActionPerformed(evt);
            }
        });

        btnClear.setText(JCmdLineApp.getStringsClass().get_clear_all_btn_text());
        btnClear.setName("btnClear"); // NOI18N
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnCopy2CmdLine.setText(JCmdLineApp.getStringsClass().get_copy_to_main_window());
        btnCopy2CmdLine.setName("btnCopy2CmdLine"); // NOI18N
        btnCopy2CmdLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCopy2CmdLineActionPerformed(evt);
            }
        });

        scrollPanelCurves.setName("scrollPanelCurves"); // NOI18N

        panelCurves.setName("panelCurves"); // NOI18N

        javax.swing.GroupLayout panelCurvesLayout = new javax.swing.GroupLayout(panelCurves);
        panelCurves.setLayout(panelCurvesLayout);
        panelCurvesLayout.setHorizontalGroup(
            panelCurvesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 419, Short.MAX_VALUE)
        );
        panelCurvesLayout.setVerticalGroup(
            panelCurvesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 289, Short.MAX_VALUE)
        );

        scrollPanelCurves.setViewportView(panelCurves);

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(jcmdline.JCmdLineApp.class).getContext().getResourceMap(JMultiXYZChartDef.class);
        txtFieldZTitle.setText(resourceMap.getString("txtFieldZTitle.text")); // NOI18N
        txtFieldZTitle.setName("txtFieldZTitle"); // NOI18N

        lblZTitle.setText(JCmdLineApp.getStringsClass().get_graph_Ztitle_prompt());
        lblZTitle.setName("lblZTitle"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAddCurve)
                        .addGap(18, 18, 18)
                        .addComponent(btnClear)
                        .addGap(18, 18, 18)
                        .addComponent(btnCopy2CmdLine))
                    .addComponent(scrollPanelCurves, javax.swing.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblChartName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtFieldChartName, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblChartTitle)
                        .addGap(18, 18, 18)
                        .addComponent(txtFieldChartTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblXTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtFieldXTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblYTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtFieldYTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblZTitle)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtFieldZTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChartName)
                    .addComponent(txtFieldChartName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblChartTitle)
                    .addComponent(txtFieldChartTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblXTitle)
                    .addComponent(txtFieldXTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblYTitle)
                    .addComponent(txtFieldYTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblZTitle)
                    .addComponent(txtFieldZTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddCurve)
                    .addComponent(btnClear)
                    .addComponent(btnCopy2CmdLine))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scrollPanelCurves, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddCurveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCurveActionPerformed
        if (mnNumofCurves >= MAX_NUMBER_OF_CURVES) {
            return;
        }
        int nCount = panelCurves.getComponentCount();
        while (nCount > mnNumofCurves) {
            panelCurves.remove(--nCount);
        }
        marrayCurveDef[mnNumofCurves] = new JMultiXYZCurveDef(this);
        marrayCurveDef[mnNumofCurves].mnIndex = mnNumofCurves;
        panelCurves.add(marrayCurveDef[mnNumofCurves], mnNumofCurves);
        panelCurves.revalidate();
        mnNumofCurves++;
    }//GEN-LAST:event_btnAddCurveActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        for (int i = 0; i < MAX_NUMBER_OF_CURVES; i++) {
            marrayCurveDef[i] = null;
        }
        mnNumofCurves = 0;
        panelCurves.removeAll();
        panelCurves.revalidate();

        txtFieldChartName.setText("");
        txtFieldChartTitle.setText("");
        txtFieldXTitle.setText("");
        txtFieldYTitle.setText("");
        txtFieldZTitle.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    //add Escapes in ActivityPlotGraph works differently from same name function in JFXYChartViewer.
    public static String addEscapes(String strInput) {
        String strOutput = "";
        if (strInput != null) {
            for (int i = 0; i < strInput.length(); i++) {
                char cCurrent = strInput.charAt(i);
                if (cCurrent == '\"') {
                    strOutput += "\\\"";
                } else if (cCurrent == '\\') {
                    strOutput += "\\\\";
                } else {
                    strOutput += cCurrent;
                }
            }
        }
        return strOutput;
    }

    private void btnCopy2CmdLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCopy2CmdLineActionPerformed
        if (JCmdLineApp.getApplication().isIdle()) {
            String strChartName = txtFieldChartName.getText();
            String strChartTitle = txtFieldChartTitle.getText();
            String strXTitle = txtFieldXTitle.getText();
            String strYTitle = txtFieldYTitle.getText();
            String strZTitle = txtFieldZTitle.getText();
            String strPlotCmdLine = "plot_3d_surfaces(\"" + addEscapes(strChartName).trim() + "\",\""
                    + addEscapes(strChartTitle).trim() + "\",\""
                    + addEscapes(strXTitle).trim() + "\",\""
                    + addEscapes(strYTitle).trim() + "\",\""
                    + addEscapes(strZTitle).trim() + "\"";

            for (int i = 0; i < mnNumofCurves; i++) {
                String strMaxColorValue = marrayCurveDef[i].getMaxColorValue();
                if (marrayCurveDef[i].getMaxColorDblValue() == null) {
                    strMaxColorValue = "null";
                }
                String strMinColorValue = marrayCurveDef[i].getMinColorValue();
                if (marrayCurveDef[i].getMinColorDblValue() == null) {
                    strMinColorValue = "null";
                }
                String strUStep = marrayCurveDef[i].getUStep();
                if (strUStep.trim().length() == 0) {    // empty string
                    strUStep = "0";    //0 means automatic;
                }
                String strVStep = marrayCurveDef[i].getVStep();
                if (strVStep.trim().length() == 0) {    // empty string
                    strVStep = "0";    //0 means automatic;
                }

                strPlotCmdLine += ",\"" + addEscapes(marrayCurveDef[i].getCurveTitle()).trim()
                        + "\"," + marrayCurveDef[i].getIsGrid()
                        + ",\"" + addEscapes(marrayCurveDef[i].getMinColor()).trim()
                        + "\",\"" + addEscapes(marrayCurveDef[i].getMinColor1()).trim()
                        + "\"," + strMinColorValue
                        + ",\"" + addEscapes(marrayCurveDef[i].getMaxColor()).trim()
                        + "\",\"" + addEscapes(marrayCurveDef[i].getMaxColor1()).trim()
                        + "\"," + strMaxColorValue
                        + ",\"u\"," + marrayCurveDef[i].getUFrom()
                        + "," + marrayCurveDef[i].getUTo()
                        + "," + strUStep
                        + ",\"v\"," + marrayCurveDef[i].getVFrom()
                        + "," + marrayCurveDef[i].getVTo()
                        + "," + strVStep
                        + ",\"" + addEscapes(marrayCurveDef[i].getXuv()).trim()
                        + "\",\"" + addEscapes(marrayCurveDef[i].getYuv()).trim()
                        + "\",\"" + addEscapes(marrayCurveDef[i].getZuv()).trim() + "\"";
            }
            strPlotCmdLine += ")";
            JCmdLineView cmdLineView = (JCmdLineView) JCmdLineApp.getApplication().getMainView();
            cmdLineView.pasteNewCmd(strPlotCmdLine);
        }
    }//GEN-LAST:event_btnCopy2CmdLineActionPerformed

    private void txtFieldChartNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFieldChartNameFocusLost
        String strChartName = txtFieldChartName.getText();
        if (strChartName.contains("\\") || strChartName.contains(":") || strChartName.contains("*")
                || strChartName.contains("?") || strChartName.contains("\"") || strChartName.contains("<")
                || strChartName.contains(">") || strChartName.contains("|")) {
            // invalid chart name character
            txtFieldChartName.setForeground(Color.red);
            btnCopy2CmdLine.setEnabled(false);
        } else {
            txtFieldChartName.setForeground(Color.black);
            if (JCmdLineApp.getApplication().isIdle()) {
                btnCopy2CmdLine.setEnabled(true);
            }
        }
    }//GEN-LAST:event_txtFieldChartNameFocusLost

    public void deleteCurve(int nIndex) {
        marrayCurveDef[nIndex] = null;
        for (int i = nIndex + 1; i < MAX_NUMBER_OF_CURVES; i++) {
            marrayCurveDef[i - 1] = marrayCurveDef[i];
            if (marrayCurveDef[i - 1] != null) {
                marrayCurveDef[i - 1].mnIndex = i - 1;
            }
        }
        marrayCurveDef[MAX_NUMBER_OF_CURVES - 1] = null;
        panelCurves.remove(nIndex);
        mnNumofCurves--;
        panelCurves.revalidate();
        panelCurves.repaint();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddCurve;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnCopy2CmdLine;
    private javax.swing.JLabel lblChartName;
    private javax.swing.JLabel lblChartTitle;
    private javax.swing.JLabel lblXTitle;
    private javax.swing.JLabel lblYTitle;
    private javax.swing.JLabel lblZTitle;
    private javax.swing.JPanel panelCurves;
    private javax.swing.JScrollPane scrollPanelCurves;
    private javax.swing.JTextField txtFieldChartName;
    private javax.swing.JTextField txtFieldChartTitle;
    private javax.swing.JTextField txtFieldXTitle;
    private javax.swing.JTextField txtFieldYTitle;
    private javax.swing.JTextField txtFieldZTitle;
    // End of variables declaration//GEN-END:variables

    private int mnNumofCurves = 0;
    private static final int MAX_NUMBER_OF_CURVES = 8;  // was PlotLib.MAX_NUMBER_OF_3D_SURFACES_TO_PLOT;
    private JMultiXYZCurveDef[] marrayCurveDef = new JMultiXYZCurveDef[MAX_NUMBER_OF_CURVES];

    public javax.swing.JButton getCopy2CmdLineBtn() {
        return btnCopy2CmdLine;
    }
}
